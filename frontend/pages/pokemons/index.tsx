import {
  GetPokemonTypesQuery,
  GetPokemonTypesQueryVariables,
} from '@/__generated__/graphql'
import { GET_POKEMON_TYPES } from '@/components/common/graphql'
import { Content } from '@/components/pokemons/Content'
import { Header } from '@/components/pokemons/Header'
import { initialState, pageReducer } from '@/components/pokemons/pageReducer'
import { IPageState, PageAction } from '@/components/pokemons/types'
import { getClient } from '@/lib/apolloClient'
import Head from 'next/head'
import React, { Reducer, useReducer } from 'react'
import styles from '@/styles/pokemons.module.scss'

interface IPokemonsPage {
  pokemonTypes: GetPokemonTypesQuery['pokemonTypes']
}
export const PokemonsPage: React.FC<IPokemonsPage> = ({ pokemonTypes }) => {
  const [pageState, dispatch] = useReducer<Reducer<IPageState, PageAction>>(
    pageReducer,
    { ...initialState, pokemonTypes },
  )
  return (
    <>
      <Head>
        <title>Pokemons</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Header
          initialPageState={initialState}
          dispatch={dispatch}
          pageState={pageState}
        />
        <Content />
      </main>
    </>
  )
}

export default PokemonsPage

export async function getStaticProps() {
  const client = getClient()
  const { data } = await client.query<
    GetPokemonTypesQuery,
    GetPokemonTypesQueryVariables
  >({ query: GET_POKEMON_TYPES })
  return {
    props: {
      pokemonTypes: data.pokemonTypes,
    },
  }
}
